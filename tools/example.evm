/*
 *  EmbedVM - Embedded Virtual Machine for uC Applications
 *
 *  Copyright (C) 2011  Clifford Wolf <clifford@clifford.at>
 *  
 *  Permission to use, copy, modify, and/or distribute this software for any
 *  purpose with or without fee is hereby granted, provided that the above
 *  copyright notice and this permission notice appear in all copies.
 *  
 *  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 *  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 *  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 *  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 *  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 *  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 *  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 */


$memaddr 0x0010

global x;
global y;
global z;

array8u array_8bit_unsigned[16];
array8s array_8bit_signed[16];
array16 array_16bit[16];

function sum3(a,b,c)
{
	return a + 2*b + 3*c;
}

function sum_loop()
{
	local i, j;
	for (i=0; i<16; i=i+1)
	for (j=0; j<16; j=j+1) {
		array_16bit[i] = array_16bit[i] + array_8bit_unsigned[j];
	}
}

function init()
{
	local i;
	for (i=0; i<16; i=i+1) {
		array_8bit_unsigned[i] = i;
		array_8bit_signed[i] = -i;
		array_16bit[i] = i * 500 * (i%2 == 0 ? +1 : -1);
		userfunc2(i, array_16bit[i]);
	}
	x = 1;
	y = 2;
	z = 3;
}

function demo()
{
	local i, sum;

	init();
	sum_loop();

	userfunc1(1);
	userfunc2(2, 3);
	userfunc3(4, 5, 6);
	userfunc4($line, $addr);
	userfunc5(sum3(1, 10, 100));

	for (i=0; i<16; i=i+1)
		sum = userfunc6(sum, array_16bit[i]);

	userfunc7(userfunc6(-sum) + 2920);

	userfunc0();
}

$trampoline 0x0000 demo

